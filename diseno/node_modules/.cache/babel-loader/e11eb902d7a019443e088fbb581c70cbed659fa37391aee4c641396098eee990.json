{"ast":null,"code":"// src/apis/authApi.js\n\n// const BASE_URL = \"http://localhost:5000/api/auth\";\nconst BASE_URL = \"/api/auth\"; // mismo dominio en Render // ajusta según tu backend\n\nexport async function loginApi({\n  usuario,\n  contrasena\n}) {\n  const res = await fetch(`${BASE_URL}/login`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      usuario,\n      contrasena\n    })\n  });\n  const data = await res.json();\n  if (!res.ok) throw new Error(data.mensaje || \"Error en login\");\n  return data; // retorna token, usuario, rol\n}\nexport async function registerApi(formData) {\n  const res = await fetch(`${BASE_URL}/register`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(formData)\n  });\n  const data = await res.json();\n  if (!res.ok) throw new Error(data.mensaje || \"Error en registro\");\n  return data; // mensaje de éxito\n}","map":{"version":3,"names":["BASE_URL","loginApi","usuario","contrasena","res","fetch","method","headers","body","JSON","stringify","data","json","ok","Error","mensaje","registerApi","formData"],"sources":["C:/Users/jdma_/Downloads/implementacion/diseno/src/apis/authApi.js"],"sourcesContent":["// src/apis/authApi.js\r\n\r\n// const BASE_URL = \"http://localhost:5000/api/auth\";\r\nconst BASE_URL = \"/api/auth\"; // mismo dominio en Render // ajusta según tu backend\r\n\r\nexport async function loginApi({ usuario, contrasena }) {\r\n  const res = await fetch(`${BASE_URL}/login`, {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify({ usuario, contrasena }),\r\n  });\r\n\r\n  const data = await res.json();\r\n\r\n  if (!res.ok) throw new Error(data.mensaje || \"Error en login\");\r\n\r\n  return data; // retorna token, usuario, rol\r\n}\r\n\r\nexport async function registerApi(formData) {\r\n  const res = await fetch(`${BASE_URL}/register`, {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify(formData),\r\n  });\r\n\r\n  const data = await res.json();\r\n\r\n  if (!res.ok) throw new Error(data.mensaje || \"Error en registro\");\r\n\r\n  return data; // mensaje de éxito\r\n}"],"mappings":"AAAA;;AAEA;AACA,MAAMA,QAAQ,GAAG,WAAW,CAAC,CAAC;;AAE9B,OAAO,eAAeC,QAAQA,CAAC;EAAEC,OAAO;EAAEC;AAAW,CAAC,EAAE;EACtD,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGL,QAAQ,QAAQ,EAAE;IAC3CM,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAER,OAAO;MAAEC;IAAW,CAAC;EAC9C,CAAC,CAAC;EAEF,MAAMQ,IAAI,GAAG,MAAMP,GAAG,CAACQ,IAAI,CAAC,CAAC;EAE7B,IAAI,CAACR,GAAG,CAACS,EAAE,EAAE,MAAM,IAAIC,KAAK,CAACH,IAAI,CAACI,OAAO,IAAI,gBAAgB,CAAC;EAE9D,OAAOJ,IAAI,CAAC,CAAC;AACf;AAEA,OAAO,eAAeK,WAAWA,CAACC,QAAQ,EAAE;EAC1C,MAAMb,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGL,QAAQ,WAAW,EAAE;IAC9CM,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACO,QAAQ;EAC/B,CAAC,CAAC;EAEF,MAAMN,IAAI,GAAG,MAAMP,GAAG,CAACQ,IAAI,CAAC,CAAC;EAE7B,IAAI,CAACR,GAAG,CAACS,EAAE,EAAE,MAAM,IAAIC,KAAK,CAACH,IAAI,CAACI,OAAO,IAAI,mBAAmB,CAAC;EAEjE,OAAOJ,IAAI,CAAC,CAAC;AACf","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}